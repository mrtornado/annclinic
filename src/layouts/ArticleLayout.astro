---
import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import { formatDate } from "../utils/romanian";
import { Image } from "astro:assets";

// Definim calea către imaginile articolelor
const articleImagesPath = "/images/articles/";
const vaccinareImagePath = `${articleImagesPath}vaccinare-copii.svg`;
const cardiaceImagePath = `${articleImagesPath}simptome-probleme-cardiace.svg`;
const acneeImagePath = `${articleImagesPath}tratament-acnee-adolescenti.svg`;

interface Props {
  article: CollectionEntry<"articles">;
  relatedArticles?: CollectionEntry<"articles">[];
}

const { article, relatedArticles = [] } = Astro.props;
const { Content } = await article.render();

// Function to get the correct image path for each article
const getArticleImagePath = (slug: string) => {
  const imageMap: Record<string, string> = {
    "vaccinarea-copiilor-program-national": vaccinareImagePath,
    "simptome-probleme-cardiace": cardiaceImagePath,
    "tratament-acnee-adolescenti": acneeImagePath,
  };
  return imageMap[slug] || null;
};

const articleImagePath = getArticleImagePath(article.slug);

// SEO optimization
const seoTitle =
  article.data.seoTitle || `${article.data.title} | ANN Medical Clinic`;
const seoDescription = article.data.seoDescription || article.data.description;
const canonicalUrl =
  article.data.canonicalUrl || `${Astro.site}articole/${article.slug}`;

// Structured data for SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Article",
  headline: article.data.structuredData?.headline || article.data.title,
  description: seoDescription,
  image: article.data.image ? `${Astro.site}${article.data.image}` : undefined,
  datePublished: article.data.publishDate.toISOString(),
  dateModified: (
    article.data.updatedDate || article.data.publishDate
  ).toISOString(),
  author: {
    "@type": "Person",
    name: article.data.author,
    description: article.data.authorBio,
  },
  publisher: {
    "@type": "Organization",
    name: "ANN Medical Clinic",
    logo: {
      "@type": "ImageObject",
      url: `${Astro.site}images/ann-clinic-logo.png`,
    },
  },
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": canonicalUrl,
  },
  articleSection: article.data.specialty,
  keywords: article.data.seoKeywords.join(", "),
  wordCount: article.body.split(/\s+/).length,
  timeRequired: `PT${article.data.readingTime || 5}M`,
};

// FAQ structured data if available
const faqStructuredData = article.data.faq
  ? {
      "@context": "https://schema.org",
      "@type": "FAQPage",
      mainEntity: article.data.faq.map((faq) => ({
        "@type": "Question",
        name: faq.question,
        acceptedAnswer: {
          "@type": "Answer",
          text: faq.answer,
        },
      })),
    }
  : null;

// Medical article specific structured data
const medicalStructuredData = {
  "@context": "https://schema.org",
  "@type": "MedicalWebPage",
  name: article.data.title,
  description: seoDescription,
  url: canonicalUrl,
  medicalAudience: {
    "@type": "MedicalAudience",
    audienceType: "Patient",
  },
  about: {
    "@type": "MedicalCondition",
    name: article.data.specialty,
  },
  lastReviewed: article.data.reviewDate?.toISOString(),
  reviewedBy: article.data.reviewedBy
    ? {
        "@type": "Person",
        name: article.data.reviewedBy,
      }
    : undefined,
};
---

<BaseLayout
  title={seoTitle}
  description={seoDescription}
  keywords={article.data.seoKeywords}
  canonicalUrl={canonicalUrl}
>
  <!-- Structured Data -->
  <script
    type="application/ld+json"
    is:inline
    set:html={JSON.stringify(structuredData)}
  />
  {
    faqStructuredData && (
      <script
        type="application/ld+json"
        is:inline
        set:html={JSON.stringify(faqStructuredData)}
      />
    )
  }
  {
    article.data.medicallyReviewed && (
      <script
        type="application/ld+json"
        is:inline
        set:html={JSON.stringify(medicalStructuredData)}
      />
    )
  }

  <!-- Article Meta Tags -->
  <meta
    property="article:published_time"
    content={article.data.publishDate.toISOString()}
  />
  {
    article.data.updatedDate && (
      <meta
        property="article:modified_time"
        content={article.data.updatedDate.toISOString()}
      />
    )
  }
  <meta property="article:author" content={article.data.author} />
  <meta property="article:section" content={article.data.specialty} />
  {
    article.data.tags.map((tag) => (
      <meta property="article:tag" content={tag} />
    ))
  }

  <!-- Medical Content Meta -->
  {
    article.data.medicallyReviewed && (
      <>
        <meta name="medical-review" content="true" />
        <meta name="reviewed-by" content={article.data.reviewedBy} />
        {article.data.reviewDate && (
          <meta
            name="review-date"
            content={article.data.reviewDate.toISOString()}
          />
        )}
      </>
    )
  }

  <main class="min-h-screen overflow-hidden pt-24">
    <!-- Background Effects -->
    <div class="absolute inset-0 pointer-events-none">
      <div
        class="absolute top-20 left-10 w-32 h-32 bg-primary/5 rounded-full blur-3xl animate-pulse"
      >
      </div>
      <div
        class="absolute bottom-20 right-10 w-40 h-40 bg-secondary/5 rounded-full blur-3xl animate-pulse"
        style="animation-delay: 2s;"
      >
      </div>
      <div
        class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-60 h-60 bg-accent/3 rounded-full blur-3xl animate-pulse"
        style="animation-delay: 4s;"
      >
      </div>
    </div>

    <!-- Article Header -->
    <header
      class="relative bg-gradient-to-r from-white via-surface-elevated to-white shadow-xl border-b border-primary/20"
    >
      <div class="max-w-4xl mx-auto px-4 py-8">
        <!-- Breadcrumb -->
        <nav class="mb-6 text-sm text-gray-600">
          <a href="/" class="hover:text-teal-600">Acasă</a>
          <span class="mx-2">›</span>
          <a href="/articole" class="hover:text-teal-600">Articole</a>
          <span class="mx-2">›</span>
          <a
            href={`/articole?specialty=${encodeURIComponent(article.data.specialty)}`}
            class="hover:text-teal-600"
          >
            {article.data.specialty}
          </a>
          <span class="mx-2">›</span>
          <span class="text-gray-900">{article.data.title}</span>
        </nav>

        <!-- Article Meta -->
        <div
          class="flex flex-wrap items-center gap-4 mb-6 text-sm text-gray-600"
        >
          <div class="flex items-center gap-2">
            <span class="inline-block w-2 h-2 bg-teal-500 rounded-full"></span>
            <span>{article.data.specialty}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
              ></path>
            </svg>
            <time datetime={article.data.publishDate.toISOString()}>
              {formatDate(article.data.publishDate)}
            </time>
          </div>
          {
            article.data.readingTime && (
              <div class="flex items-center gap-2">
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
                <span>{article.data.readingTime} min citire</span>
              </div>
            )
          }
          {
            article.data.difficulty && (
              <div class="flex items-center gap-2">
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                  />
                </svg>
                <span>{article.data.difficulty}</span>
              </div>
            )
          }
        </div>

        <!-- Title and Description -->
        <h1
          class="text-3xl md:text-4xl lg:text-5xl font-bold bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent mb-6 leading-tight"
        >
          {article.data.title}
        </h1>
        <p
          class="text-lg md:text-xl text-gray-600 mb-8 leading-relaxed max-w-4xl"
        >
          {article.data.description}
        </p>

        <!-- Author and Medical Review Info -->
        <div
          class="flex flex-wrap items-center justify-between gap-4 p-4 bg-gray-50 rounded-lg"
        >
          <div class="flex items-center gap-3">
            <div
              class="w-10 h-10 bg-teal-100 rounded-full flex items-center justify-center"
            >
              <svg
                class="w-5 h-5 text-teal-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                ></path>
              </svg>
            </div>
            <div>
              <p class="font-medium text text-gray-900">
                {article.data.author}
              </p>
              {
                article.data.authorBio && (
                  <p class="text-sm text-gray-600">{article.data.authorBio}</p>
                )
              }
            </div>
          </div>

          {
            article.data.medicallyReviewed && (
              <div class="flex items-center gap-2 text-sm text-green-600">
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
                <span>Revizuit medical</span>
                {article.data.reviewedBy && (
                  <span>de {article.data.reviewedBy}</span>
                )}
              </div>
            )
          }
        </div>

        <!-- Featured Image -->
        <div class="mt-8">
          <div class="relative overflow-hidden rounded-2xl shadow-2xl">
            {
              articleImagePath ? (
                <img
                  src={articleImagePath}
                  alt={article.data.imageAlt || article.data.title}
                  class="w-full h-64 md:h-80 lg:h-96 object-cover"
                  loading="eager"
                />
              ) : article.data.image ? (
                <img
                  src={article.data.image}
                  alt={article.data.imageAlt || article.data.title}
                  class="w-full h-64 md:h-80 lg:h-96 object-cover"
                  loading="eager"
                />
              ) : (
                <div class="w-full h-64 md:h-80 lg:h-96 bg-gradient-to-br from-primary/20 via-secondary/20 to-accent/20 flex items-center justify-center">
                  <div class="text-center">
                    <div class="text-6xl mb-4">🏥</div>
                    <p class="text-lg font-medium text-primary">
                      {article.data.specialty}
                    </p>
                  </div>
                </div>
              )
            }
            <div
              class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"
            >
            </div>
          </div>
        </div>
      </div>
    </header>

    <!-- Article Content -->
    <article class="relative max-w-4xl mx-auto px-4 py-12">
      <div
        class="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl border border-primary/10 p-8 lg:p-12 mb-8"
      >
        <div class="prose prose-lg prose-teal max-w-none">
          <Content />
        </div>
      </div>

      <!-- Tags -->
      {
        article.data.tags.length > 0 && (
          <div class="mt-12 pt-8 border-t border-gray-200">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Etichete</h3>
            <div class="flex flex-wrap gap-2">
              {article.data.tags.map((tag) => (
                <a
                  href={`/articole?tag=${encodeURIComponent(tag)}`}
                  class="inline-block px-3 py-1 bg-teal-100 text-teal-800 rounded-full text-sm hover:bg-teal-200 transition-colors"
                >
                  #{tag}
                </a>
              ))}
            </div>
          </div>
        )
      }

      <!-- FAQ Section -->
      {
        article.data.faq && article.data.faq.length > 0 && (
          <div class="mt-12 pt-8 border-t border-gray-200">
            <h3 class="text-2xl font-bold text-gray-900 mb-6">
              Întrebări Frecvente
            </h3>
            <div class="space-y-4">
              {article.data.faq.map((faq, index) => (
                <details class="group bg-white rounded-lg shadow-sm border border-gray-200">
                  <summary class="flex items-center justify-between p-4 cursor-pointer hover:bg-gray-50 rounded-lg">
                    <h4 class="font-medium text-gray-900 pr-4">
                      {faq.question}
                    </h4>
                    <svg
                      class="w-5 h-5 text-gray-500 group-open:rotate-180 transition-transform"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M19 9l-7 7-7-7"
                      />
                    </svg>
                  </summary>
                  <div class="px-4 pb-4 text-gray-600">
                    <p>{faq.answer}</p>
                  </div>
                </details>
              ))}
            </div>
          </div>
        )
      }

      <!-- Related Articles -->
      {
        relatedArticles.length > 0 && (
          <div class="mt-16 pt-8 border-t border-primary/20">
            <h3 class="text-2xl lg:text-3xl font-bold text-center mb-8 bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent">
              Articole Similare
            </h3>
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {relatedArticles.map((relatedArticle, index) => (
                <div
                  class="group"
                  style={`animation-delay: ${index * 0.1}s; animation: fadeInUp 0.6s ease-out forwards;`}
                >
                  <a
                    href={`/articole/${relatedArticle.slug}`}
                    class="block bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-primary/10 hover:shadow-2xl transition-all duration-300 transform hover:scale-105 overflow-hidden"
                  >
                    <div class="relative">
                      {getArticleImagePath(relatedArticle.slug) ? (
                        <img
                          src={getArticleImagePath(relatedArticle.slug)}
                          alt={
                            relatedArticle.data.imageAlt ||
                            relatedArticle.data.title
                          }
                          class="w-full h-48 object-cover"
                          loading="lazy"
                        />
                      ) : relatedArticle.data.image ? (
                        <img
                          src={relatedArticle.data.image}
                          alt={
                            relatedArticle.data.imageAlt ||
                            relatedArticle.data.title
                          }
                          class="w-full h-48 object-cover"
                          loading="lazy"
                        />
                      ) : (
                        <div class="w-full h-48 bg-gradient-to-br from-primary/20 via-secondary/20 to-accent/20 flex items-center justify-center">
                          <div class="text-4xl">🏥</div>
                        </div>
                      )}
                      <div class="absolute top-4 left-4">
                        <span class="inline-block px-3 py-1 bg-primary text-white text-sm font-medium rounded-full">
                          {relatedArticle.data.specialty}
                        </span>
                      </div>
                    </div>
                    <div class="p-6">
                      <h4 class="font-bold text-lg mb-3 group-hover:text-primary transition-colors line-clamp-2">
                        {relatedArticle.data.title}
                      </h4>
                      <p class="text-secondary text-sm mb-4 line-clamp-3">
                        {relatedArticle.data.description}
                      </p>
                      <div class="flex items-center justify-between text-xs text-muted">
                        <span>
                          {formatDate(relatedArticle.data.publishDate)}
                        </span>
                        {relatedArticle.data.readingTime && (
                          <span class="flex items-center gap-1">
                            <svg
                              class="w-3 h-3"
                              fill="none"
                              stroke="currentColor"
                              viewBox="0 0 24 24"
                            >
                              <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                              />
                            </svg>
                            {relatedArticle.data.readingTime} min
                          </span>
                        )}
                      </div>
                    </div>
                  </a>
                </div>
              ))}
            </div>
          </div>
        )
      }

      <!-- Call to Action -->
      <div class="mt-16 pt-8 border-t border-primary/20">
        <div
          class="relative bg-gradient-to-br from-primary via-secondary to-accent rounded-2xl p-8 lg:p-12 text-white text-center overflow-hidden shadow-2xl"
        >
          <!-- Background Effects -->
          <div class="absolute inset-0">
            <div
              class="absolute top-4 right-4 w-24 h-24 bg-white/10 rounded-full blur-xl"
            >
            </div>
            <div
              class="absolute bottom-4 left-4 w-32 h-32 bg-white/5 rounded-full blur-2xl"
            >
            </div>
          </div>

          <div class="relative z-10">
            <div class="text-5xl mb-4">🏥</div>
            <h3 class="text-2xl lg:text-3xl font-bold mb-4">
              Ai nevoie de o consultație?
            </h3>
            <p class="text-lg lg:text-xl mb-8 opacity-90 max-w-2xl mx-auto">
              Programează-te la ANN Medical Clinic pentru o evaluare completă cu
              specialiștii noștri. Oferim consultații de {
                article.data.specialty.toLowerCase()
              } cu echipamente moderne.
            </p>
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
              <a
                href="/programare"
                class="inline-flex items-center justify-center gap-2 bg-white text-primary px-8 py-4 rounded-xl font-semibold hover:bg-surface-secondary transition-all duration-300 transform hover:scale-105 shadow-lg"
              >
                📅 Programează Consultație
              </a>
              <a
                href={`/servicii/${article.data.specialty.toLowerCase()}`}
                class="inline-flex items-center justify-center gap-2 bg-white/20 backdrop-blur-sm text-white px-8 py-4 rounded-xl font-semibold hover:bg-white/30 transition-all duration-300 border border-white/30"
              >
                🔍 Vezi Serviciile de {article.data.specialty}
              </a>
            </div>
          </div>
        </div>
      </div>
    </article>
  </main>
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .prose {
    color: var(--color-text);
    font-size: 1.125rem;
    line-height: 1.8;
  }

  .prose h1 {
    font-size: 2.5rem;
    font-weight: 800;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    background: linear-gradient(135deg, #0d9488, #14b8a6, #d97706);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    line-height: 1.2;
  }

  .prose h2 {
    font-size: 2.25rem;
    font-weight: 800;
    margin-top: 4rem;
    margin-bottom: 2rem;
    background: linear-gradient(135deg, #0d9488, #14b8a6);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    border-bottom: 3px solid #0d9488;
    padding-bottom: 0.75rem;
    position: relative;
  }

  .prose h2::before {
    content: "";
    position: absolute;
    left: 0;
    bottom: -3px;
    width: 60px;
    height: 3px;
    background: linear-gradient(135deg, #d97706, #f59e0b);
    border-radius: 2px;
  }

  .prose h3 {
    font-size: 1.75rem;
    font-weight: 700;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    color: #14b8a6;
    position: relative;
    padding-left: 1.5rem;
  }

  .prose h3::before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 4px;
    height: 100%;
    background: linear-gradient(135deg, #14b8a6, #0d9488);
    border-radius: 2px;
  }

  .prose h4 {
    font-size: 1.375rem;
    font-weight: 600;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: #0f766e;
    background: linear-gradient(
      135deg,
      rgba(13, 148, 136, 0.1),
      rgba(20, 184, 166, 0.05)
    );
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    border-left: 4px solid #0d9488;
  }

  .prose p {
    margin-bottom: 1.5rem;
    line-height: 1.8;
    text-align: justify;
  }

  .prose ul,
  .prose ol {
    margin-bottom: 2rem;
    padding-left: 2rem;
    background: linear-gradient(
      135deg,
      rgba(13, 148, 136, 0.03),
      rgba(20, 184, 166, 0.03)
    );
    padding: 1.5rem 2rem;
    border-radius: 0.75rem;
    border-left: 3px solid #14b8a6;
  }

  .prose li {
    margin-bottom: 1rem;
    line-height: 1.8;
    position: relative;
  }

  .prose ul li::marker {
    color: #0d9488;
    font-size: 1.2em;
  }

  .prose ol li::marker {
    color: #0d9488;
    font-weight: 600;
  }

  .prose li strong {
    color: #0d9488;
    font-weight: 700;
    background: linear-gradient(
      135deg,
      rgba(13, 148, 136, 0.1),
      rgba(20, 184, 166, 0.05)
    );
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
  }

  .prose a {
    color: #0d9488;
    text-decoration: underline;
    font-weight: 500;
    transition: color 0.3s ease;
  }

  .prose a:hover {
    color: #0f766e;
  }

  .prose blockquote {
    border-left: 5px solid #0d9488;
    padding: 2rem;
    margin: 3rem 0;
    background: linear-gradient(
      135deg,
      rgba(13, 148, 136, 0.08),
      rgba(20, 184, 166, 0.08)
    );
    border-radius: 1rem;
    font-style: italic;
    font-size: 1.125rem;
    color: var(--color-text-secondary);
    position: relative;
    box-shadow: 0 4px 20px rgba(13, 148, 136, 0.1);
  }

  .prose blockquote::before {
    content: '"';
    position: absolute;
    top: -10px;
    left: 20px;
    font-size: 4rem;
    color: #0d9488;
    opacity: 0.3;
    font-family: serif;
  }

  .prose code {
    background: linear-gradient(
      135deg,
      rgba(13, 148, 136, 0.1),
      rgba(20, 184, 166, 0.1)
    );
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.9rem;
    font-weight: 500;
    color: #0d9488;
  }

  .prose pre {
    background: linear-gradient(
      135deg,
      rgba(13, 148, 136, 0.05),
      rgba(20, 184, 166, 0.05)
    );
    padding: 1.5rem;
    border-radius: 0.75rem;
    overflow-x: auto;
    margin: 2rem 0;
    border: 1px solid rgba(13, 148, 136, 0.2);
  }

  /* Special styling for checkmarks and crosses */
  .prose p:has(> strong:first-child) {
    padding: 1rem;
    margin: 1rem 0;
    border-radius: 0.5rem;
    border-left: 4px solid;
  }

  .prose p:has(> strong:first-child:contains("✅")) {
    background: linear-gradient(
      135deg,
      rgba(34, 197, 94, 0.05),
      rgba(22, 163, 74, 0.05)
    );
    border-left-color: #22c55e;
  }

  .prose p:has(> strong:first-child:contains("❌")) {
    background: linear-gradient(
      135deg,
      rgba(239, 68, 68, 0.05),
      rgba(220, 38, 38, 0.05)
    );
    border-left-color: #ef4444;
  }

  /* Better spacing for sections */
  .prose > * + * {
    margin-top: 1.5rem;
  }

  .prose > h2 + * {
    margin-top: 1rem;
  }

  .prose > h3 + * {
    margin-top: 0.75rem;
  }

  /* Animation for related articles */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
